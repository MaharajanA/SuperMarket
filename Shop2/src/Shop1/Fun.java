/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Shop1;

import java.awt.Component;
import java.awt.event.KeyEvent;
import javax.swing.*;


/**
 *
 * @author admin
 */
public class Fun extends javax.swing.JFrame {

    double Carrotp=35.5;
    double Beansp=30;
    double Potatop=31;
    double Onionsp=33;
    double Tomatop=15;
    double Cabbagep=38;
    double Applep=45;
    double Bananap=5;
    double Orangep=50;
    double Chipsp=5;
    double Bunsp=5;
    double Spritep=30;
    double Colap=32;
    double Waterp=15;
    double Cookiesp=5;
    double Milkp = 37;
    double Cheesep=90;
    double Butterp =95;
    double TaxRate=3;
    
    double iTax,iTotal,iChange,iEnteredAmount,iSubTotal;
    
          
    double it[]=new double[18];

    public Fun() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jcSprite = new javax.swing.JCheckBox();
        jcChips = new javax.swing.JCheckBox();
        jcBuns = new javax.swing.JCheckBox();
        jcCola = new javax.swing.JCheckBox();
        jcWater = new javax.swing.JCheckBox();
        jcCookies = new javax.swing.JCheckBox();
        jtCola = new javax.swing.JTextField();
        jtSprite = new javax.swing.JTextField();
        jtBuns = new javax.swing.JTextField();
        jtChips = new javax.swing.JTextField();
        jtWater = new javax.swing.JTextField();
        jtCookies = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcMilk = new javax.swing.JCheckBox();
        jcCheese = new javax.swing.JCheckBox();
        jcButter = new javax.swing.JCheckBox();
        jtMilk = new javax.swing.JTextField();
        jtCheese = new javax.swing.JTextField();
        jtButter = new javax.swing.JTextField();
        jcbCola = new javax.swing.JComboBox<>();
        jcbChips = new javax.swing.JComboBox<>();
        jcbBuns = new javax.swing.JComboBox<>();
        jcbSprite = new javax.swing.JComboBox<>();
        jcbWater = new javax.swing.JComboBox<>();
        jcbCookies = new javax.swing.JComboBox<>();
        jcbMilk = new javax.swing.JComboBox<>();
        jcbCheese = new javax.swing.JComboBox<>();
        jcbButter = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcBeans = new javax.swing.JCheckBox();
        jcCarrot = new javax.swing.JCheckBox();
        jcOnions = new javax.swing.JCheckBox();
        jcPotato = new javax.swing.JCheckBox();
        jcApple = new javax.swing.JCheckBox();
        jcTomato = new javax.swing.JCheckBox();
        jcCabbage = new javax.swing.JCheckBox();
        jcOrange = new javax.swing.JCheckBox();
        jcBanana = new javax.swing.JCheckBox();
        jtCarrot = new javax.swing.JTextField();
        jtBeans = new javax.swing.JTextField();
        jtPotato = new javax.swing.JTextField();
        jtOnions = new javax.swing.JTextField();
        jtTomato = new javax.swing.JTextField();
        jtCabbage = new javax.swing.JTextField();
        jtApple = new javax.swing.JTextField();
        jtBanana = new javax.swing.JTextField();
        jtOrange = new javax.swing.JTextField();
        jCbCarrot = new javax.swing.JComboBox<>();
        jcbPotato = new javax.swing.JComboBox<>();
        jcbBeans = new javax.swing.JComboBox<>();
        jcbOnion = new javax.swing.JComboBox<>();
        jcbTomato = new javax.swing.JComboBox<>();
        jcbCabbage = new javax.swing.JComboBox<>();
        jcbApple = new javax.swing.JComboBox<>();
        jcbBanana = new javax.swing.JComboBox<>();
        jcbOrange = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jCombo = new javax.swing.JComboBox<>();
        jtEnteredAmount = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jbReset = new javax.swing.JButton();
        jbExit = new javax.swing.JButton();
        jbTotal = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jlTax = new javax.swing.JLabel();
        jlTotal = new javax.swing.JLabel();
        jlSubTotal = new javax.swing.JLabel();
        jlChange = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setText("Snacks And Drinks :");

        jcSprite.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcSprite.setText("Sprite");
        jcSprite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcSpriteActionPerformed(evt);
            }
        });

        jcChips.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcChips.setText("Chips");
        jcChips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcChipsActionPerformed(evt);
            }
        });

        jcBuns.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcBuns.setText("Buns");
        jcBuns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcBunsActionPerformed(evt);
            }
        });

        jcCola.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcCola.setText("Cola");
        jcCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcColaActionPerformed(evt);
            }
        });

        jcWater.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcWater.setText("Water");
        jcWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcWaterActionPerformed(evt);
            }
        });

        jcCookies.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcCookies.setText("Cookies");
        jcCookies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcCookiesActionPerformed(evt);
            }
        });

        jtCola.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCola.setText("0");
        jtCola.setEnabled(false);
        jtCola.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtColaKeyTyped(evt);
            }
        });

        jtSprite.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtSprite.setText("0");
        jtSprite.setEnabled(false);
        jtSprite.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtSpriteKeyTyped(evt);
            }
        });

        jtBuns.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtBuns.setText("0");
        jtBuns.setEnabled(false);
        jtBuns.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtBunsKeyTyped(evt);
            }
        });

        jtChips.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtChips.setText("0");
        jtChips.setEnabled(false);
        jtChips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtChipsActionPerformed(evt);
            }
        });
        jtChips.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtChipsKeyTyped(evt);
            }
        });

        jtWater.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtWater.setText("0");
        jtWater.setEnabled(false);
        jtWater.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtWaterKeyTyped(evt);
            }
        });

        jtCookies.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCookies.setText("0");
        jtCookies.setEnabled(false);
        jtCookies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtCookiesKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Milk Products :");

        jcMilk.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcMilk.setText("Milk");
        jcMilk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcMilkActionPerformed(evt);
            }
        });

        jcCheese.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcCheese.setText("Cheese");
        jcCheese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcCheeseActionPerformed(evt);
            }
        });

        jcButter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcButter.setText("Butter");
        jcButter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcButterActionPerformed(evt);
            }
        });

        jtMilk.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtMilk.setText("0");
        jtMilk.setEnabled(false);
        jtMilk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtMilkKeyTyped(evt);
            }
        });

        jtCheese.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCheese.setText("0");
        jtCheese.setEnabled(false);
        jtCheese.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtCheeseKeyTyped(evt);
            }
        });

        jtButter.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtButter.setText("0");
        jtButter.setEnabled(false);
        jtButter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtButterKeyTyped(evt);
            }
        });

        jcbCola.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbCola.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lit", "ML" }));
        jcbCola.setEnabled(false);
        jcbCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbColaActionPerformed(evt);
            }
        });

        jcbChips.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbChips.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piece" }));
        jcbChips.setEnabled(false);
        jcbChips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbChipsActionPerformed(evt);
            }
        });

        jcbBuns.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbBuns.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piece" }));
        jcbBuns.setEnabled(false);
        jcbBuns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBunsActionPerformed(evt);
            }
        });

        jcbSprite.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbSprite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lit", "ML" }));
        jcbSprite.setEnabled(false);
        jcbSprite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSpriteActionPerformed(evt);
            }
        });

        jcbWater.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbWater.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lit", "ML" }));
        jcbWater.setEnabled(false);
        jcbWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbWaterActionPerformed(evt);
            }
        });

        jcbCookies.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbCookies.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piece" }));
        jcbCookies.setEnabled(false);
        jcbCookies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCookiesActionPerformed(evt);
            }
        });

        jcbMilk.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbMilk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lit", "ML" }));
        jcbMilk.setEnabled(false);
        jcbMilk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMilkActionPerformed(evt);
            }
        });

        jcbCheese.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbCheese.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbCheese.setEnabled(false);
        jcbCheese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCheeseActionPerformed(evt);
            }
        });

        jcbButter.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbButter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbButter.setEnabled(false);
        jcbButter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbButterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jtCookies, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtWater, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtCola, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtChips, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addComponent(jtBuns, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtSprite, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtMilk, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jcMilk, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcWater, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcCookies, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcCola, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcChips, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcBuns, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcSprite, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcCheese)
                                    .addComponent(jcButter))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtButter, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtCheese, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbChips, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbWater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCookies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbMilk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCheese, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbButter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbBuns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcChips)
                    .addComponent(jtChips, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbChips, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcBuns)
                    .addComponent(jtBuns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbBuns, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcSprite)
                    .addComponent(jtSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbSprite, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcCola)
                    .addComponent(jtCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCola, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcWater)
                    .addComponent(jtWater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbWater, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcCookies)
                    .addComponent(jtCookies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCookies, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcMilk)
                    .addComponent(jtMilk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbMilk, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcCheese)
                    .addComponent(jtCheese, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCheese, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcButter)
                    .addComponent(jtButter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbButter, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 110, 280, 380));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jLabel1.setText("Glocery Shop");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addComponent(jLabel1)
                .addContainerGap(370, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1000, 90));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Fruits :");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Vegetables :");

        jcBeans.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcBeans.setText("Beans");
        jcBeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcBeansActionPerformed(evt);
            }
        });

        jcCarrot.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcCarrot.setText("Carrot");
        jcCarrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcCarrotActionPerformed(evt);
            }
        });

        jcOnions.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcOnions.setText("Onions");
        jcOnions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcOnionsActionPerformed(evt);
            }
        });

        jcPotato.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcPotato.setText("Potato");
        jcPotato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcPotatoActionPerformed(evt);
            }
        });

        jcApple.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcApple.setText("Apple");
        jcApple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcAppleActionPerformed(evt);
            }
        });

        jcTomato.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcTomato.setText("Tomato");
        jcTomato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTomatoActionPerformed(evt);
            }
        });

        jcCabbage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcCabbage.setText("Cabbage");
        jcCabbage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcCabbageActionPerformed(evt);
            }
        });

        jcOrange.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcOrange.setText("Orange");
        jcOrange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcOrangeActionPerformed(evt);
            }
        });

        jcBanana.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcBanana.setText("Banana");
        jcBanana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcBananaActionPerformed(evt);
            }
        });

        jtCarrot.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCarrot.setText("0");
        jtCarrot.setEnabled(false);
        jtCarrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCarrotActionPerformed(evt);
            }
        });
        jtCarrot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtCarrotKeyTyped(evt);
            }
        });

        jtBeans.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtBeans.setText("0");
        jtBeans.setEnabled(false);
        jtBeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtBeansActionPerformed(evt);
            }
        });
        jtBeans.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtBeansKeyTyped(evt);
            }
        });

        jtPotato.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtPotato.setText("0");
        jtPotato.setEnabled(false);
        jtPotato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtPotatoKeyTyped(evt);
            }
        });

        jtOnions.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtOnions.setText("0");
        jtOnions.setEnabled(false);
        jtOnions.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtOnionsKeyTyped(evt);
            }
        });

        jtTomato.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtTomato.setText("0");
        jtTomato.setEnabled(false);
        jtTomato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtTomatoKeyTyped(evt);
            }
        });

        jtCabbage.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCabbage.setText("0");
        jtCabbage.setEnabled(false);
        jtCabbage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtCabbageKeyTyped(evt);
            }
        });

        jtApple.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtApple.setText("0");
        jtApple.setEnabled(false);
        jtApple.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtAppleKeyTyped(evt);
            }
        });

        jtBanana.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtBanana.setText("0");
        jtBanana.setEnabled(false);
        jtBanana.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtBananaKeyTyped(evt);
            }
        });

        jtOrange.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtOrange.setText("0");
        jtOrange.setEnabled(false);
        jtOrange.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtOrangeKeyTyped(evt);
            }
        });

        jCbCarrot.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jCbCarrot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jCbCarrot.setEnabled(false);
        jCbCarrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbCarrotActionPerformed(evt);
            }
        });

        jcbPotato.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbPotato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbPotato.setEnabled(false);
        jcbPotato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPotatoActionPerformed(evt);
            }
        });

        jcbBeans.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbBeans.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbBeans.setEnabled(false);
        jcbBeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBeansActionPerformed(evt);
            }
        });

        jcbOnion.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbOnion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbOnion.setEnabled(false);
        jcbOnion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbOnionActionPerformed(evt);
            }
        });

        jcbTomato.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbTomato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbTomato.setEnabled(false);
        jcbTomato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTomatoActionPerformed(evt);
            }
        });

        jcbCabbage.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbCabbage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbCabbage.setEnabled(false);
        jcbCabbage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCabbageActionPerformed(evt);
            }
        });

        jcbApple.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbApple.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbApple.setEnabled(false);
        jcbApple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAppleActionPerformed(evt);
            }
        });

        jcbBanana.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbBanana.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piece" }));
        jcbBanana.setEnabled(false);
        jcbBanana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBananaActionPerformed(evt);
            }
        });

        jcbOrange.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jcbOrange.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "G" }));
        jcbOrange.setEnabled(false);
        jcbOrange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbOrangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jcCarrot)
                                .addGap(35, 35, 35)
                                .addComponent(jtCarrot, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcBeans)
                                    .addComponent(jcOnions)
                                    .addComponent(jcPotato)
                                    .addComponent(jcTomato))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtTomato, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(jtOnions)
                                    .addComponent(jtPotato)
                                    .addComponent(jtBeans))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCbCarrot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbPotato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbOnion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbBeans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbTomato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jcOrange)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcBanana)
                                    .addComponent(jcApple)
                                    .addComponent(jcCabbage))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtBanana, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                            .addComponent(jtOrange)
                                            .addComponent(jtApple)))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jtCabbage, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbApple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbBanana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbOrange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jcbCabbage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcCarrot)
                    .addComponent(jtCarrot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCbCarrot, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcBeans)
                    .addComponent(jtBeans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbBeans, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcPotato)
                    .addComponent(jtPotato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbPotato, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcOnions)
                    .addComponent(jtOnions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbOnion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcTomato)
                    .addComponent(jtTomato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbTomato, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcCabbage)
                    .addComponent(jtCabbage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCabbage, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcApple)
                    .addComponent(jtApple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbApple, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcBanana)
                    .addComponent(jtBanana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbBanana, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcOrange)
                    .addComponent(jtOrange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbOrange, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 300, 380));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        jCombo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CASH", "CREDIT CARD", "VISA CARD", "MASTER CARD" }));
        jCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboActionPerformed(evt);
            }
        });

        jtEnteredAmount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jtEnteredAmount.setText("0");
        jtEnteredAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtEnteredAmountKeyTyped(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 102, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Change :");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("TAX            :");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("SUBTOTAL:");

        jbReset.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jbReset.setText("RESET");
        jbReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbResetActionPerformed(evt);
            }
        });

        jbExit.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jbExit.setText("EXIT");
        jbExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExitActionPerformed(evt);
            }
        });

        jbTotal.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jbTotal.setText("TOTAL");
        jbTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTotalActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("TOTAL        :");

        jlTax.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));

        jlTotal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));

        jlSubTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jlSubTotal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));

        jlChange.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtEnteredAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlChange, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jbTotal)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)))
                    .addComponent(jbReset))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jbExit, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlTax, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtEnteredAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jlChange, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlTax, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jlSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbReset, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, 410, 170));

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Carrot", "₹35(per kg)"},
                {"Beans", "₹30(per kg)"},
                {"Potato", "₹31(per kg)"},
                {"Onions", "₹33(per kg)"},
                {"Tomato", "₹15(per kg)"},
                {"Cabbage", "₹38(per kg)"},
                {"Apple", "₹45(per kg)"},
                {"Banana", "₹5(per peice)"},
                {"Orange", "₹50(per kg)"},
                {"Chips", "₹5(per peice)"},
                {"Buns", "₹5(per peice)"},
                {"Sprite", "₹30(per litre)"},
                {"Cola", "₹32(per litre)"},
                {"Water", "₹15(per litre)"},
                {"Cookies", "₹5(per peice)"},
                {"Milk", "₹37(per litre)"},
                {"Cheese", "₹90(per kg)"},
                {"Butter", "₹95(per kg)"},
                {"", null},
                {null, null}
            },
            new String [] {
                "Item", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 410, 180));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcBeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcBeansActionPerformed
        // TODO add your handling code here:
        if (jcBeans.isSelected()) {
            jtBeans.setEnabled(true);
            jtBeans.requestFocus();
            jtBeans.setText("");
            jcbBeans.setEnabled(true);
        } else {
            jtBeans.setEnabled(false);
            jtBeans.setText("0");
            jcbBeans.setEnabled(false);
        }
    }//GEN-LAST:event_jcBeansActionPerformed

    private void jcCarrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcCarrotActionPerformed
        // TODO add your handling code here:
        if (jcCarrot.isSelected()) {
            jtCarrot.setEnabled(true);
            jtCarrot.requestFocus();
            jtCarrot.setText("");
            jCbCarrot.setEnabled(true);
        } else {
            jtCarrot.setEnabled(false);
            jtCarrot.setText("0");
            jCbCarrot.setEnabled(false);
        }
    }//GEN-LAST:event_jcCarrotActionPerformed

    private void jcOnionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcOnionsActionPerformed
        // TODO add your handling code here:
        if (jcOnions.isSelected()) {
            jtOnions.setEnabled(true);
            jtOnions.requestFocus();
            jtOnions.setText("");
            jcbOnion.setEnabled(true);
        } else {
            jtOnions.setEnabled(false);
            jtOnions.setText("0");
           jcbOnion.setEnabled(false);

        }
    }//GEN-LAST:event_jcOnionsActionPerformed

    private void jcPotatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcPotatoActionPerformed
        // TODO add your handling code here:
        if (jcPotato.isSelected()) {
            jtPotato.setEnabled(true);
            jtPotato.requestFocus();
            jtPotato.setText("");
            jcbPotato.setEnabled(true);
        } else {
            jtPotato.setEnabled(false);
            jtPotato.setText("0");
            jcbPotato.setEnabled(false);
        }
    }//GEN-LAST:event_jcPotatoActionPerformed

    private void jcAppleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcAppleActionPerformed
        // TODO add your handling code here:
        if (jcApple.isSelected()) {
            jtApple.setEnabled(true);
            jtApple.requestFocus();
            jtApple.setText("");
            jcbApple.setEnabled(true);
        } else {
            jtApple.setEnabled(false);
            jtApple.setText("0");
            jcbApple.setEnabled(false);
        }
    }//GEN-LAST:event_jcAppleActionPerformed

    private void jcCabbageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcCabbageActionPerformed
        // TODO add your handling code here:
        if (jcCabbage.isSelected()) {
            jtCabbage.setEnabled(true);
            jtCabbage.requestFocus();
            jtCabbage.setText("");
            jcbCabbage.setEnabled(true);
        } else {
            jtCabbage.setEnabled(false);
            jtCabbage.setText("0");
            jcbCabbage.setEnabled(false);
        }
    }//GEN-LAST:event_jcCabbageActionPerformed

    private void jcOrangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcOrangeActionPerformed
        // TODO add your handling code here:
        if (jcOrange.isSelected()) {
            jtOrange.setEnabled(true);
            jtOrange.requestFocus();
            jtOrange.setText("");
            jcbOrange.setEnabled(true);
        } else {
            jtOrange.setEnabled(false);
            jtOrange.setText("0");
            jcbOrange.setEnabled(false);
        }
    }//GEN-LAST:event_jcOrangeActionPerformed

    private void jcBananaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcBananaActionPerformed
        // TODO add your handling code here:
        if (jcBanana.isSelected()) {
            jtBanana.setEnabled(true);
            jtBanana.requestFocus();
            jtBanana.setText("");
            jcbBanana.setEnabled(true);
        } else {
            jtBanana.setEnabled(false);
            jtBanana.setText("0");
            jcbBanana.setEnabled(false);
        }
    }//GEN-LAST:event_jcBananaActionPerformed

    private void jcButterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcButterActionPerformed
        // TODO add your handling code here:
        if (jcButter.isSelected()) {
            jtButter.setEnabled(true);
            jtButter.requestFocus();
            jtButter.setText("");
            jcbButter.setEnabled(true);
        } else {
            jtButter.setEnabled(false);
            jtButter.setText("0");
            jcbButter.setEnabled(false);
        }
    }//GEN-LAST:event_jcButterActionPerformed

    private void jcMilkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcMilkActionPerformed
        // TODO add your handling code here:
        if (jcMilk.isSelected()) {
            jtMilk.setEnabled(true);
            jtMilk.requestFocus();
            jtMilk.setText("");
            jcbMilk.setEnabled(true);
        } else {
            jtMilk.setEnabled(false);
            jtMilk.setText("0");
            jcbMilk.setEnabled(false);
        }
    }//GEN-LAST:event_jcMilkActionPerformed

    private void jcCheeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcCheeseActionPerformed
        // TODO add your handling code here:
        if (jcCheese.isSelected()) {
            jtCheese.setEnabled(true);
            jtCheese.requestFocus();
            jtCheese.setText("");
            jcbCheese.setEnabled(true);
        } else {
            jtCheese.setEnabled(false);
            jtCheese.setText("0");
            jcbCheese.setEnabled(false);
        }
    }//GEN-LAST:event_jcCheeseActionPerformed

    private void jcCookiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcCookiesActionPerformed
        // TODO add your handling code here:
        if (jcCookies.isSelected()) {
            jtCookies.setEnabled(true);
            jtCookies.requestFocus();
            jtCookies.setText("");
            jcbCookies.setEnabled(true);
        } else {
            jtCookies.setEnabled(false);
            jtCookies.setText("0");
            jcbCookies.setEnabled(false);
        }
    }//GEN-LAST:event_jcCookiesActionPerformed

    private void jcWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcWaterActionPerformed
        // TODO add your handling code here:
        if (jcWater.isSelected()) {
            jtWater.setEnabled(true);
            jtWater.requestFocus();
            jtWater.setText("");
            jcbWater.setEnabled(true);
        } else {
            jtWater.setEnabled(false);
            jtWater.setText("0");
            jcbWater.setEnabled(false);
        }
    }//GEN-LAST:event_jcWaterActionPerformed

    private void jcColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcColaActionPerformed
        // TODO add your handling code here:
        if (jcCola.isSelected()) {
            jtCola.setEnabled(true);
            jtCola.requestFocus();
            jtCola.setText("");
            jcbCola.setEnabled(true);
        } else {
            jtCola.setEnabled(false);
            jtCola.setText("0");
            jcbCola.setEnabled(false);
        }
    }//GEN-LAST:event_jcColaActionPerformed

    private void jcBunsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcBunsActionPerformed
        // TODO add your handling code here:
        if (jcBuns.isSelected()) {
            jtBuns.setEnabled(true);
            jtBuns.requestFocus();
            jtBuns.setText("");
            jcbBuns.setEnabled(true);
        } else {
            jtBuns.setEnabled(false);
            jtBuns.setText("0");
            jcbBuns.setEnabled(false);
        }
    }//GEN-LAST:event_jcBunsActionPerformed

    private void jcChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcChipsActionPerformed
        // TODO add your handling code here:
        if (jcChips.isSelected()) {
            jtChips.setEnabled(true);
            jtChips.requestFocus();
            jtChips.setText("");
            jcbChips.setEnabled(true);
        } else {
            jtChips.setEnabled(false);
            jtChips.setText("0");
            jcbChips.setEnabled(false);
        }
    }//GEN-LAST:event_jcChipsActionPerformed

    private void jcSpriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcSpriteActionPerformed
        // TODO add your handling code here:
        if (jcSprite.isSelected()) {
            jtSprite.setEnabled(true);
            jtSprite.requestFocus();
            jtSprite.setText("");
            jcbSprite.setEnabled(true);
        } else {
            jtSprite.setEnabled(false);
            jtSprite.setText("0");
            jcbSprite.setEnabled(false);
        }
    }//GEN-LAST:event_jcSpriteActionPerformed

    private void jbResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbResetActionPerformed
        Component frame = null;
        // TODO add your handling code here:
       if (JOptionPane.showConfirmDialog(frame, "Confirm to Reset", "Reset", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
        
        jtCarrot.setText(null);
        jtBeans.setText(null);
        jtPotato.setText(null);
        jtOnions.setText(null);
        jtTomato.setText(null);
        jtCabbage.setText(null);
        jtApple.setText(null);
        jtBanana.setText(null);
        jtOrange.setText(null);
        jtChips.setText(null);
        jtBuns.setText(null);
        jtWater.setText(null);
        jtSprite.setText(null);
        jtCola.setText(null);
        jtCookies.setText(null);
        jtMilk.setText(null);
        jtCheese.setText(null);
        jtButter.setText(null);
        jtEnteredAmount.setText("0");
        //===============================
        jtCarrot.setEnabled(false);
        jtBeans.setEnabled(false);
        jtPotato.setEnabled(false);
        jtOnions.setEnabled(false);
        jtTomato.setEnabled(false);
        jtCabbage.setEnabled(false);
        jtApple.setEnabled(false);
        jtBanana.setEnabled(false);
        jtOrange.setEnabled(false);
        jtChips.setEnabled(false);
        jtBuns.setEnabled(false);
        jtWater.setEnabled(false);
        jtSprite.setEnabled(false);
        jtCola.setEnabled(false);
        jtCookies.setEnabled(false);
        jtMilk.setEnabled(false);
        jtCheese.setEnabled(false);
        jtButter.setEnabled(false);
        //=====================================
        jCbCarrot.setEnabled(false);
        jcbBeans.setEnabled(false);
        jcbPotato.setEnabled(false);
        jcbOnion.setEnabled(false);
        jcbTomato.setEnabled(false);
        jcbCabbage.setEnabled(false);
        jcbApple.setEnabled(false);
        jcbBanana.setEnabled(false);
        jcbOrange.setEnabled(false);
        jcbChips.setEnabled(false);
        jcbBuns.setEnabled(false);
        jcbSprite.setEnabled(false);
        jcbCola.setEnabled(false);
        jcbWater.setEnabled(false);
        jcbCookies.setEnabled(false);
        jcbMilk.setEnabled(false);
        jcbCheese.setEnabled(false);
        jcbButter.setEnabled(false);
        //=====================================
        jcCarrot.setSelected(false);
        jcBeans.setSelected(false);
        jcPotato.setSelected(false);
        jcOnions.setSelected(false);
        jcTomato.setSelected(false);
        jcCabbage.setSelected(false);
        jcApple.setSelected(false);
        jcBanana.setSelected(false);
        jcOrange.setSelected(false);
        jcChips.setSelected(false);
        jcBuns.setSelected(false);
        jcWater.setSelected(false);
        jcSprite.setSelected(false);
        jcCola.setSelected(false);
        jcCookies.setSelected(false);
        jcMilk.setSelected(false);
        jcCheese.setSelected(false);
        jcButter.setSelected(false);
        //===============================
            jlSubTotal.setText("");
            jlTax.setText("");
            jlTotal.setText("");
            jlChange.setText("");
        }
    }//GEN-LAST:event_jbResetActionPerformed

    private void jbExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExitActionPerformed
        Component frame = null;
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(frame, "Confirm to Exit", "Exit", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);
        }


    }//GEN-LAST:event_jbExitActionPerformed

    private void jbTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTotalActionPerformed
        // TODO add your handling code here:
        
       /* it[0]=  Double.parseDouble(jtCarrot.getName());
        it[1]=  Double.parseDouble(jtBeans.getName());
        it[2]=  Double.parseDouble(jtPotato.getName());
        it[3]=  Double.parseDouble(jtOnions.getName());
        it[4]=  Double.parseDouble(jtTomato.getName());
        it[5]=  Double.parseDouble(jtCabbage.getName());
        it[6]=  Double.parseDouble(jtApple.getName());
        it[7]=  Double.parseDouble(jtBanana.getName());
        it[8]=  Double.parseDouble(jtOrange.getName());
        it[9]=  Double.parseDouble(jtChips.getName());
        it[10]=  Double.parseDouble(jtBuns.getName());
        it[11]=  Double.parseDouble(jtSprite.getName());
        it[12]=  Double.parseDouble(jtCola.getName());
        it[13]= Double.parseDouble(jtWater.getName());
        it[14]=  Double.parseDouble(jtCookies.getName());
        it[15]=  Double.parseDouble(jtMilk.getName());
        it[16]=  Double.parseDouble(jtCheese.getName());
        it[17]=  Double.parseDouble(jtButter.getName());
        
        
        iSubTotal= it[0] + it[1] + it[2] + it[3] + it[4] + it[5] + it[6] + it[7] + it[8] + it[9] + it[10] + it[11] + it[12] + it[13] + it[14] + it[15] + it[16] + it[17];
        
        
        
        
        String iAmount=String.format("₹%.2f", iSubTotal);
        jtTotal.setText(iAmount);
        */
       double sum = 0;
       
       double qty;
       double cal = 0;
       if(jcCarrot.isSelected()){
           
           qty=Integer.parseInt(jtCarrot.getText().toString());
          
           if(jCbCarrot.getSelectedItem()=="KG"){
           cal=(qty*Carrotp);
           it[0]=cal;
           }
           else{
               cal=(qty/1000*Carrotp);
                it[0]=cal;
           }
       }
       if(jcBeans.isSelected()){
           
           qty=Integer.parseInt(jtBeans.getText().toString());
           
           if(jcbBeans.getSelectedItem()=="KG"){
           cal=(qty*Beansp);
           it[1]=cal;
           }
           else{
               cal=(qty/1000*Beansp);
               it[1]=cal;
           }
       }
       if(jcPotato.isSelected()){
           
           qty=Integer.parseInt(jtPotato.getText().toString());
           
           if(jcbPotato.getSelectedItem()=="KG"){
           cal=(qty*Potatop);
           it[2]=cal;
           }
           else{
               cal=(qty/1000*Potatop);
           it[2]=cal;
           }
       }
       if(jcOnions.isSelected()){
           
           qty=Integer.parseInt(jtOnions.getText().toString());
           
           if(jcbOnion.getSelectedItem()=="KG"){
           cal=(qty*Onionsp);
           it[3]=cal;
           }
           else{
               cal=(qty/1000*Onionsp);
           it[3]=cal;
           }
       }
       if(jcTomato.isSelected()){
           
           qty=Integer.parseInt(jtTomato.getText().toString());
           
           if(jcbTomato.getSelectedItem()=="KG"){
           cal=(qty*Tomatop);
           it[4]=cal;
           }
           else{
               cal=(qty/1000*Tomatop);
           it[4]=cal;
           }
       }
       if(jcCabbage.isSelected()){
           
           qty=Integer.parseInt(jtCabbage.getText().toString());
           
           if(jcbCabbage.getSelectedItem()=="KG"){
           cal=(qty*Cabbagep);
           it[5]=cal;
           }
           else{
               cal=(qty/1000*Cabbagep);
           it[5]=cal;
           }
       }
       if(jcApple.isSelected()){
           
           qty=Integer.parseInt(jtApple.getText().toString());
           
           if(jcbApple.getSelectedItem()=="KG"){
           cal=(qty*Applep);
           it[6]=cal;
           }
           else{
               cal=(qty/1000*Applep);
           it[6]=cal;
           }
       }
       if(jcBanana.isSelected()){
           
           qty=Integer.parseInt(jtBanana.getText().toString());
           cal=(qty*Bananap);
           it[7]=cal;
       }
       if(jcOrange.isSelected()){
           
           qty=Integer.parseInt(jtOrange.getText().toString());
           
           if(jcbOrange.getSelectedItem()=="KG"){
           cal=(qty*Orangep);
           it[8]=cal;
           }
           else{
               cal=(qty/1000*Orangep);
           it[8]=cal;
           }
       }
       if(jcChips.isSelected()){
           
           qty=Integer.parseInt(jtChips.getText().toString());
           cal=(qty*Chipsp);
           it[9]=cal;
       }
       if(jcBuns.isSelected()){
           
           qty=Integer.parseInt(jtBuns.getText().toString());
           cal=(qty*Bunsp);
           it[10]=cal;
       }
       if(jcSprite.isSelected()){
           
           qty=Integer.parseInt(jtSprite.getText().toString());
           
           if(jcbSprite.getSelectedItem()=="Lit"){
           cal=(qty*Spritep);
           it[11]=cal;
           }
           else{
               cal=(qty/1000*Spritep);
           it[11]=cal;
           }
       }
       if(jcCola.isSelected()){
          
           qty=Integer.parseInt(jtCola.getText().toString());
           
           if(jcbCola.getSelectedItem()=="Lit"){
           cal=(qty*Colap);
           it[12]=cal;
           }
           else{
               cal=(qty/1000*Colap);
           it[12]=cal;
           }
       }
       if(jcWater.isSelected()){
           
           qty=Integer.parseInt(jtWater.getText().toString());
           
           if(jcbWater.getSelectedItem()=="Lit"){
           cal=(qty*Waterp);
           it[13]=cal;
           }
           else{
                cal=(qty/1000*Waterp);
           it[13]=cal;
           }
       }
       if(jcCookies.isSelected()){
           
           qty=Integer.parseInt(jtCookies.getText().toString());
           cal=(qty*Cookiesp);
           it[14]=cal;
       }
       if(jcMilk.isSelected()){
           
           qty=Integer.parseInt(jtMilk.getText().toString());
           
           if(jcbMilk.getSelectedItem()=="Lit"){
           cal=(qty*Milkp);
           it[15]=cal;
           }
           else{
               cal=(qty/1000*Milkp);
           it[15]=cal;
           }
       }
       if(jcCheese.isSelected()){
           
           qty=Integer.parseInt(jtCheese.getText().toString());
           
           if(jcbCheese.getSelectedItem()=="KG"){
           cal=(qty*Cheesep);
           it[16]=cal;
           }
           else{
               cal=(qty/1000*Cheesep);
           it[16]=cal;
           }
       }
       if(jcButter.isSelected()){
           
           qty=Integer.parseInt(jtButter.getText().toString());
           
           if(jcbButter.getSelectedItem()=="KG"){
           cal=(qty*Butterp);
           it[17]=cal;
           }
           else{
               cal=(qty/1000*Butterp);
           it[17]=cal;
           }
       }
       String Payment=(String)jCombo.getSelectedItem();
       if(Payment.equals("CASH")){
           
        
        iSubTotal=it[0]+it[1]+it[2]+it[3]+it[4]+it[5]+it[6]+it[7]+it[8]+it[9]+it[10]+it[11]+it[12]+it[13]+it[14]+it[15]+it[16]+it[17];
        iEnteredAmount=Integer.parseInt(jtEnteredAmount.getText().toString());
        
        
        String iAmount=String.format("$"+iSubTotal, iSubTotal);
        
        
        iTax=(iSubTotal * TaxRate)/100;
        String iTaxAmount=String.format("$"+iTax, iTax);
        
        
        double Total=iTax+iSubTotal;
        String iTotal=String.format("$"+Total,Total);
        
        if(iEnteredAmount>=Total){
            
            double Change1=(iEnteredAmount-Total);
            String iChange=String.format("$"+Change1,Change1);
            jlSubTotal.setText(iAmount);
            jlTax.setText(iTaxAmount);
            jlTotal.setText(iTotal);
            jlChange.setText(iChange);
            
        }else{
            JOptionPane.showMessageDialog(null,"Enter Enough Cash\nTotal Cash Required :"+iTotal,"Not Enough Cash",JOptionPane.OK_OPTION );
        }
        
        

       }else{
        jtEnteredAmount.setText("0");
        jlChange.setText("");
        iSubTotal=it[0]+it[1]+it[2]+it[3]+it[4]+it[5]+it[6]+it[7]+it[8]+it[9]+it[10]+it[11]+it[12]+it[13]+it[14]+it[15]+it[16]+it[17];
        String iAmount=String.format("$"+iSubTotal, iSubTotal);
        jlSubTotal.setText(iAmount);
        
        iTax=(iSubTotal * TaxRate)/100;
        String iTaxAmount=String.format("$"+iTax, iTax);
        jlTax.setText(iTaxAmount);
        
        double Total=iTax+iSubTotal;
        String iTotal=String.format("$"+Total,Total);
        jlTotal.setText(iTotal);
       }
        
    }//GEN-LAST:event_jbTotalActionPerformed

    private void jcTomatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTomatoActionPerformed
        // TODO add your handling code here:
        if (jcTomato.isSelected()) {
            jtTomato.setEnabled(true);
            jtTomato.requestFocus();
            jtTomato.setText("");
            jcbTomato.setEnabled(true);
        } else {
            jtTomato.setEnabled(false);
            jtTomato.setText("0");
        }
    }//GEN-LAST:event_jcTomatoActionPerformed

    private void jtCarrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCarrotActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jtCarrotActionPerformed

    private void jtCarrotKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCarrotKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
    }//GEN-LAST:event_jtCarrotKeyTyped
    }
    private void jtBeansKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBeansKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtBeansKeyTyped

    private void jtPotatoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPotatoKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtPotatoKeyTyped

    private void jtOnionsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtOnionsKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtOnionsKeyTyped

    private void jtTomatoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTomatoKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtTomatoKeyTyped

    private void jtCabbageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCabbageKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtCabbageKeyTyped

    private void jtAppleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtAppleKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtAppleKeyTyped

    private void jtBananaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBananaKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtBananaKeyTyped

    private void jtOrangeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtOrangeKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtOrangeKeyTyped

    private void jtEnteredAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtEnteredAmountKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtEnteredAmountKeyTyped

    private void jtChipsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtChipsKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtChipsKeyTyped

    private void jtBunsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBunsKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtBunsKeyTyped

    private void jtSpriteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtSpriteKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtSpriteKeyTyped

    private void jtColaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtColaKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtColaKeyTyped

    private void jtWaterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtWaterKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtWaterKeyTyped

    private void jtCookiesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCookiesKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtCookiesKeyTyped

    private void jtMilkKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtMilkKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtMilkKeyTyped

    private void jtCheeseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCheeseKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtCheeseKeyTyped

    private void jtButterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtButterKeyTyped
        // TODO add your handling code here:
        char iNumber;
        iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtButterKeyTyped

    private void jtBeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtBeansActionPerformed
        
    }//GEN-LAST:event_jtBeansActionPerformed

    private void jComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboActionPerformed

    private void jtChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtChipsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtChipsActionPerformed

    private void jCbCarrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbCarrotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCbCarrotActionPerformed

    private void jcbPotatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPotatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbPotatoActionPerformed

    private void jcbBeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBeansActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbBeansActionPerformed

    private void jcbOnionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbOnionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbOnionActionPerformed

    private void jcbTomatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTomatoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTomatoActionPerformed

    private void jcbCabbageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCabbageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbCabbageActionPerformed

    private void jcbAppleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAppleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbAppleActionPerformed

    private void jcbBananaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBananaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbBananaActionPerformed

    private void jcbOrangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbOrangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbOrangeActionPerformed

    private void jcbColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbColaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbColaActionPerformed

    private void jcbChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbChipsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbChipsActionPerformed

    private void jcbBunsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBunsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbBunsActionPerformed

    private void jcbSpriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSpriteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbSpriteActionPerformed

    private void jcbWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbWaterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbWaterActionPerformed

    private void jcbCookiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCookiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbCookiesActionPerformed

    private void jcbMilkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMilkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbMilkActionPerformed

    private void jcbCheeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCheeseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbCheeseActionPerformed

    private void jcbButterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbButterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbButterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fun().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jCbCarrot;
    private javax.swing.JComboBox<String> jCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbExit;
    private javax.swing.JButton jbReset;
    private javax.swing.JButton jbTotal;
    private javax.swing.JCheckBox jcApple;
    private javax.swing.JCheckBox jcBanana;
    private javax.swing.JCheckBox jcBeans;
    private javax.swing.JCheckBox jcBuns;
    private javax.swing.JCheckBox jcButter;
    private javax.swing.JCheckBox jcCabbage;
    private javax.swing.JCheckBox jcCarrot;
    private javax.swing.JCheckBox jcCheese;
    private javax.swing.JCheckBox jcChips;
    private javax.swing.JCheckBox jcCola;
    private javax.swing.JCheckBox jcCookies;
    private javax.swing.JCheckBox jcMilk;
    private javax.swing.JCheckBox jcOnions;
    private javax.swing.JCheckBox jcOrange;
    private javax.swing.JCheckBox jcPotato;
    private javax.swing.JCheckBox jcSprite;
    private javax.swing.JCheckBox jcTomato;
    private javax.swing.JCheckBox jcWater;
    private javax.swing.JComboBox<String> jcbApple;
    private javax.swing.JComboBox<String> jcbBanana;
    private javax.swing.JComboBox<String> jcbBeans;
    private javax.swing.JComboBox<String> jcbBuns;
    private javax.swing.JComboBox<String> jcbButter;
    private javax.swing.JComboBox<String> jcbCabbage;
    private javax.swing.JComboBox<String> jcbCheese;
    private javax.swing.JComboBox<String> jcbChips;
    private javax.swing.JComboBox<String> jcbCola;
    private javax.swing.JComboBox<String> jcbCookies;
    private javax.swing.JComboBox<String> jcbMilk;
    private javax.swing.JComboBox<String> jcbOnion;
    private javax.swing.JComboBox<String> jcbOrange;
    private javax.swing.JComboBox<String> jcbPotato;
    private javax.swing.JComboBox<String> jcbSprite;
    private javax.swing.JComboBox<String> jcbTomato;
    private javax.swing.JComboBox<String> jcbWater;
    private javax.swing.JLabel jlChange;
    private javax.swing.JLabel jlSubTotal;
    private javax.swing.JLabel jlTax;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JTextField jtApple;
    private javax.swing.JTextField jtBanana;
    private javax.swing.JTextField jtBeans;
    private javax.swing.JTextField jtBuns;
    private javax.swing.JTextField jtButter;
    private javax.swing.JTextField jtCabbage;
    private javax.swing.JTextField jtCarrot;
    private javax.swing.JTextField jtCheese;
    private javax.swing.JTextField jtChips;
    private javax.swing.JTextField jtCola;
    private javax.swing.JTextField jtCookies;
    private javax.swing.JTextField jtEnteredAmount;
    private javax.swing.JTextField jtMilk;
    private javax.swing.JTextField jtOnions;
    private javax.swing.JTextField jtOrange;
    private javax.swing.JTextField jtPotato;
    private javax.swing.JTextField jtSprite;
    private javax.swing.JTextField jtTomato;
    private javax.swing.JTextField jtWater;
    // End of variables declaration//GEN-END:variables
}
